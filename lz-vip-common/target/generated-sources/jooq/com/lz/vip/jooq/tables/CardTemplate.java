/*
 * This file is generated by jOOQ.
*/
package com.lz.vip.jooq.tables;


import com.lz.vip.jooq.Keys;
import com.lz.vip.jooq.VipUser;
import com.lz.vip.jooq.tables.records.CardTemplateRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardTemplate extends TableImpl<CardTemplateRecord> {

    private static final long serialVersionUID = -2104185108;

    /**
     * The reference instance of <code>vip_user.card_template</code>
     */
    public static final CardTemplate CARD_TEMPLATE = new CardTemplate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CardTemplateRecord> getRecordType() {
        return CardTemplateRecord.class;
    }

    /**
     * The column <code>vip_user.card_template.id</code>. 卡模版主键
     */
    public final TableField<CardTemplateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "卡模版主键");

    /**
     * The column <code>vip_user.card_template.card_template_id</code>. 会员模版卡id
     */
    public final TableField<CardTemplateRecord, String> CARD_TEMPLATE_ID = createField("card_template_id", org.jooq.impl.SQLDataType.VARCHAR.length(50).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "会员模版卡id");

    /**
     * Create a <code>vip_user.card_template</code> table reference
     */
    public CardTemplate() {
        this("card_template", null);
    }

    /**
     * Create an aliased <code>vip_user.card_template</code> table reference
     */
    public CardTemplate(String alias) {
        this(alias, CARD_TEMPLATE);
    }

    private CardTemplate(String alias, Table<CardTemplateRecord> aliased) {
        this(alias, aliased, null);
    }

    private CardTemplate(String alias, Table<CardTemplateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return VipUser.VIP_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CardTemplateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CARD_TEMPLATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CardTemplateRecord> getPrimaryKey() {
        return Keys.KEY_CARD_TEMPLATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CardTemplateRecord>> getKeys() {
        return Arrays.<UniqueKey<CardTemplateRecord>>asList(Keys.KEY_CARD_TEMPLATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardTemplate as(String alias) {
        return new CardTemplate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CardTemplate rename(String name) {
        return new CardTemplate(name, null);
    }
}
